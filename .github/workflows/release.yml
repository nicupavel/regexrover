name: Release

on:
  push:
    tags:
      - "v*.*.*"   # e.g. v1.0.0

jobs:
  build:
    strategy:
      matrix:
        goos: [windows]
        goarch: [amd64]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # -------------------------------
      # CLI build
      # -------------------------------
      - name: Build CLI
        run: |
          go build -o bin/regexrover-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/cli

      # -------------------------------
      # Install Node.js (for frontend)
      # -------------------------------
      - name: Set up Node.js
        if: matrix.goos == 'windows'
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      # -------------------------------
      # Install Wails
      # -------------------------------
      - name: Install Wails
        if: matrix.goos == 'windows'
        run: |
          go install github.com/wailsapp/wails/v2/cmd/wails@latest
          echo "${HOME}/go/bin" >> $GITHUB_PATH

      # -------------------------------
      # Build GUI (frontend + Wails) Windows only
      # -------------------------------
      - name: Build GUI
        if: matrix.goos == 'windows'
        run: |
          cd cmd/gui/frontend
          npm install
          cd ..
          EXT=""
          if [ "${{ matrix.goos }}" == "windows" ]; then EXT=".exe"; fi
          wails build -o build/bin/regexrover-gui-${{ matrix.goos }}-${{ matrix.goarch }}$EXT -m --platform windows/amd64

      # -------------------------------
      # Upload CLI artifact (all platforms)
      # -------------------------------
      - name: Upload CLI artifact
        uses: actions/upload-artifact@v4
        with:
          name: regexrover-cli-${{ matrix.goos }}-${{ matrix.goarch }}
          path: bin/regexrover-${{ matrix.goos }}-${{ matrix.goarch }}

      # -------------------------------
      # Upload GUI artifact (Windows only)
      # -------------------------------
      - name: Upload GUI artifact
        if: matrix.goos == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: regexrover-gui-${{ matrix.goos }}-${{ matrix.goarch }}
          path: cmd/gui/build/bin/regexrover-gui-${{ matrix.goos }}-${{ matrix.goarch }}.exe